# Container host/containernames(these must be the same as docker uses them for networking and
# GSSAPI uses them to find kerberos principal names) and network names.
SSSD_CLIENT_HOST=sssd-client
LDAP_SERVICE_HOST=openldap-service
KERBEROS_HOST=IdP-Local-1
CLOUD_IDP_HOST=IdP-Cloud-1

ON_PREMISES_NETWORK=zeepaardje-net
CLOUD_IDP_NETWORK=zeepaardje-cloud-net
CLOUD_NETWORK1=cloud-service1-net
CLOUD_NETWORK1=cloud-service2-net

# Kerberos with LDAP backend as the On-Premises Identity Provider. Hosted on company LAN
KRB_LDAP_PASSWORD=LDAP-Root
KRB_LDAP_ADMINPASSWORD=LDAP-Admin
KRB_LDAP_DOMAIN=office1.zeepaardje.local
KRB_LDAP_DN=dc=office1,dc=zeepaardje,dc=local
KRB_LDAP_ORGANISATION=Zeepaardje Inc.

KRB_LDAP_TESTUSER_PASS=test
KRB_LDAP_TESTUSER_UID=john
KRB_LDAP_TESTUSER_UID2=jane
KRB_LDAP_TESTUSER_UID3=jibby

KRB_KDC_PASSWORD=KDC-Root
KRB_ADMIN_PASSWORD=KDC-Admin
KRB_REALM=${KERBEROS_HOST}.${ON_PREMISES_NETWORK}

# Seperate LDAP server to test On-Premises Kerberos Authentication. Hosted on company LAN
LDAP_PASSWORD=LDAP-Root2
LDAP_ADMINPASSWORD=LDAP-Admin2
LDAP_DOMAIN=${LDAP_SERVICE_HOST}.${ON_PREMISES_NETWORK}
LDAP_DN=dc=${LDAP_SERVICE_HOST},dc=${ON_PREMISES_NETWORK}
LDAP_ORGANISATION=Other-Company

LDAP_SYNC_DOMAINS="${KERBEROS_HOST} ${CLOUD_IDP_HOST}"